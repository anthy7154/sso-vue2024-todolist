import{u as O,s as y,r as i,g as B,h as E,c as r,a as e,t as k,w as R,v as U,n as $,i as T,b as L,F as I,j as P,o as d}from"./index-pK_1o7pe.js";import{u as V,a as c}from"./todoListStore-BwpfwVUn.js";const A={id:"todoListPage",class:"bg-half"},F=e("h1",null,[e("a",{href:"#"},"ONLINE TODO LIST")],-1),M={class:"todo_sm"},j={href:"#"},J={class:"conatiner todoListPage vhContainer"},X={class:"todoList_Content"},q={class:"inputBox"},G=e("i",{class:"fa fa-plus"},"+",-1),H=[G],K={class:"todoList_list"},Q={class:"todoList_tab"},W={class:"todoList_items"},Y={key:0},Z={class:"todoList_item"},ee=["onClick"],te=["checked"],oe=["onClick"],se=e("i",{class:"fa fa-times"},"X",-1),ae=[se],ne={class:"todoList_statistics"},le={key:0},re={__name:"TodoList",setup(ie){const C=O(),_=V(),{token:a}=y(_),l=_.api,g=i(""),f=i(""),w=async()=>{try{g.value=document.cookie.replace(/(?:(?:^|.*;\s*)hexschoolTodo\s*=\s*([^;]*).*$)|^.*$/,"$1");const t=await c.get(`${l}/users/checkout`,{headers:{authorization:g.value}});f.value=`驗證成功, UID: ${t.data.uid}, Nickname: ${t.data.nickname}`,console.log(f.value),a.value=g.value,u()}catch(t){console.log(t.message),f.value=`驗證失敗, ${t.message}`}},n=i([]),h=i(""),{todoActiveTab:v}=y(_),u=async()=>{try{const t=await c.get(`${l}/todos`,{headers:{authorization:a.value}});n.value=t.data.data,n.value.forEach((o,s)=>{n.value[s]={...o,createTime:new Date(o.createTime*1e3).toLocaleString(),editable:!1}})}catch(t){console.log(t)}},x=async()=>{try{await c.post(`${l}/todos/`,{content:h.value},{headers:{authorization:a.value}}),h.value="",u()}catch(t){console.log(t)}},b=async t=>{try{await c.delete(`${l}/todos/${t}`,{headers:{authorization:a.value}}),u()}catch(o){console.log(o)}},z=async t=>{try{await c.patch(`${l}/todos/${t}/toggle`,{},{headers:{authorization:a.value}}),u()}catch(o){console.log(o)}},p=i(""),N=async()=>{try{const t=await c.post(`${l}/users/sign_out`,{},{headers:{authorization:a.value}});p.value=t.data.message,console.log(p.value),a.value="",document.cookie="hexschoolTodo=; expires=Thu, 01 Jan 1970 00:00:00 UTC;",setTimeout(()=>{C.push("/login")},500)}catch(t){console.log(t),p.value=`登出失敗, ${t.message}`}},S=B(()=>{const t=i(0);return n.value.forEach(o=>{o.status===!1&&t.value++}),t}),m=t=>{v.value=t};return E(()=>{w(),a.value&&u()}),(t,o)=>(d(),r("div",A,[e("nav",null,[F,e("ul",null,[e("li",M,[e("a",j,[e("span",null,k(t.userNickname)+" 的代辦",1)])]),e("li",null,[e("a",{href:"#loginPage",onClick:N},"登出")])])]),e("div",J,[e("div",X,[e("div",q,[R(e("input",{type:"text",placeholder:"請輸入待辦事項","onUpdate:modelValue":o[0]||(o[0]=s=>h.value=s)},null,512),[[U,h.value]]),e("a",{href:"#/todo",onClick:x},H)]),e("div",K,[e("ul",Q,[e("li",null,[e("a",{href:"#/all",class:$({active:T(v)==="all"}),onClick:o[1]||(o[1]=s=>m("all"))},"全部",2)]),e("li",null,[e("a",{href:"#/unfinished",class:$({active:T(v)==="unfinished"}),onClick:o[2]||(o[2]=s=>m("unfinished"))},"待完成",2)]),e("li",null,[e("a",{href:"#/finished",class:$({active:T(v)==="finished"}),onClick:o[3]||(o[3]=s=>m("finished"))},"已完成",2)])]),e("div",W,[n.value.length===0?(d(),r("p",Y,"目前尚無待辦事項")):L("",!0),e("ul",Z,[(d(!0),r(I,null,P(n.value,s=>(d(),r("li",{key:s.id},[e("label",{class:"todoList_label",onClick:D=>z(s.id)},[e("input",{class:"todoList_input",type:"checkbox",value:"true",checked:s.status},null,8,te),e("span",null,k(s.content),1)],8,ee),e("a",{href:"#/todo",onClick:D=>b(s.id)},ae,8,oe)]))),128))]),e("div",ne,[n.value.length>0?(d(),r("p",le,k(S.value)+" 個待完成項目",1)):L("",!0)])])])])])]))}};export{re as default};
